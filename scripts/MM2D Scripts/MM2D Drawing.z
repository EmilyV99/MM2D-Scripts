////////////////////////////////////////
//                                    //
//     MM2D Script: Script Drawing    //
//                                    //
////////////////////////////////////////

//start BitmapDraw 
void HeightFastCombo(int layer, int x, int y, int combo, int cset, int opacity)
{
	if(combo==0)return;
	if(combo==COMBO_INVIS)return;
	if(hideLayer4 && layer>=4)return;
	Debug::print("Drawing %d at %d,%d to layer %d",combo,x,y,layer);
	//Screen->FastCombo(layer, x, y, combo, cset, OP_TRANS);
	if(layer>=4)x+=256;
	if(opacity!=OP_OPAQUE)y+=176;
	Screen->SetRenderTarget(RT_BITMAP0);
	Screen->FastCombo(layer, x, y, combo, cset, OP_OPAQUE);
	Screen->SetRenderTarget(RT_SCREEN);
}

void HeightFastTile(int layer, int x, int y, int tile, int cset, int opacity)
{
	if(tile==TILE_INVIS)return;
	if(hideLayer4 && layer>=4)return;
	//Screen->FastTile(layer, x, y, tile, cset, OP_TRANS);
	if(layer>=4)x+=256;
	if(opacity!=OP_OPAQUE)y+=176;
	Screen->SetRenderTarget(RT_BITMAP0);
	Screen->FastTile(layer, x, y, tile, cset, OP_OPAQUE);
	Screen->SetRenderTarget(RT_SCREEN);
}

void HeightLine(int layer, int x, int x2, int y, int y2, int color, int scale, int rx, int ry, int rangle, int opacity)
{
	if(hideLayer4 && layer>=4)return;
	if(layer>=4) {x+=256;x2+=256;}
	if(opacity!=OP_OPAQUE) {y+=176;y2+=176;}
	Screen->SetRenderTarget(RT_BITMAP0);
	Screen->Line(layer, x, x2, y, y2, color, scale, rx, ry, rangle, OP_OPAQUE);
	Screen->SetRenderTarget(RT_SCREEN);
}

void HeightFastComboScreen(int layer, int x, int y, int combo, int cset, int opacity)
{
	if(combo==0)return;
	if(combo==COMBO_INVIS)return;
	if(hideLayer4 && layer>=4)return;
	//Screen->FastCombo(layer, x, y, combo, cset, OP_TRANS);
	if(layer>=4)x+=256;
	if(opacity!=OP_OPAQUE)y+=176;
	Screen->SetRenderTarget(RT_BITMAP0);
	Screen->FastCombo(layer, x, y, combo, cset, OP_OPAQUE);
	Screen->SetRenderTarget(RT_SCREEN);
}

void HeightAngularTile(int layer, int cx, int cy, int tile, int blockw, int blockh, int cset, int xscale, int yscale, int rx, int ry, int rangle, int flip, bool transparency, int opacity)
{
	if(tile==TILE_INVIS)return;
	if(hideLayer4 && layer>=4)return;
	int w = xscale;
	if(xscale==-1)
		w = blockw*16;
	int h = yscale;
	if(yscale==-1)
		h = blockh*16;
	if(layer>=4) {cx+=256;rx+=256;}
	if(opacity!=OP_OPAQUE) {cy+=176;ry+=176;}
	int nx = cx-w/2;
	int ny = cy-h/2;
	int nrx = rx-w/2;
	int nry = ry-h/2;
	Screen->SetRenderTarget(RT_BITMAP0);
	Screen->DrawTile(layer, nx, ny, tile, blockw, blockh, cset, xscale, yscale, nrx, nry, rangle, flip, transparency, OP_OPAQUE);
	Screen->SetRenderTarget(RT_SCREEN);
}

void runHeightBitmap()
{
	Debug::print("Running Height Bitmap");
	//Draw bitmaps to the screen
	Screen->DrawBitmapEx(3,RT_BITMAP0,0,0,256,176,0,0,256,176,0,0,0,BITDX_TRANS,0,true);
	Screen->DrawBitmapEx(4,RT_BITMAP0,256,0,256,176,0,0,256,176,0,0,0,BITDX_TRANS,0,true);
	Screen->DrawBitmapEx(3,RT_BITMAP0,0,176,256,176,0,0,256,176,0,0,0,BITDX_TRANS,0,true);
	Screen->DrawBitmapEx(4,RT_BITMAP0,256,176,256,176,0,0,256,176,0,0,0,BITDX_TRANS,0,true);
}

void clearBitmap(int bmp)
{
	clearBitmap(bmp, 0);
}
void clearBitmap(int bmp, int layer)
{
	Screen->SetRenderTarget(bmp);
	Screen->Rectangle(layer,0,0,512,512,0,1,0,0,0,true,OP_OPAQUE);
	Screen->SetRenderTarget(RT_SCREEN);
}
//end BitmapDraw
//start LayerOverhead
//Layer drawing
void DrawLayer3_4()
{
	for(int layer = 3; layer <= 4; ++layer)
	{
		if(layer==4&&hideLayer4) return;
		unless(Screen->LayerMap(layer)>0) continue;
		mapdata m = Game->LoadMapData(Screen->LayerMap(layer),Screen->LayerScreen(layer));
		for(int pos = 0; pos < 176; ++pos)
		{
			if(m->ComboD[pos])
				HeightFastComboScreen(layer, ComboX(pos), ComboY(pos),
							m->ComboD[pos], m->ComboC[pos], OP_OPAQUE);
		}
	}
}
//end LayerOverhead
