////////////////////////////////////////
//                                    //
//     MM2D Script: NPC/Cutscene      //
//                                    //
////////////////////////////////////////

//start NPC	
int NPCNames[1000] = {"Tatl","Happy Mask Salesman","Banker","Bremor","Brac","ERROR","Tatl","Guard","Guard","Guard","Guard","ERROR"};

ffc script NPC
{
	//
	//ComboUnder should be a solid version of the combo beneath the FFC
	//
	void run(int NPCid, int NPCcombo, int startday, int starthour, int endday, int endhour, int comboUnder, bool special)//start NPC setup
	{
		if(NPCcombo == COMBO_INVIS || NPCcombo == 0)
			NPCcombo = this->Data;
		this->Data = COMBO_INVIS;
		int loc = ComboAt(this->X,this->Y);
		bool visible = false;
		Waitframe();//Grayswandir's overhead layers script wipes remote screens combos. This causes a conflict if we fall down from an above screen, or raise from a lower screen; Waitframe() fixes this, for now.
		int comboDefault = Screen->ComboD[loc];
		if(NPCid==3&&GetCurDMap()!=0)//Hardcode for Bremor to make it not conflict with the cutscene on that screen
		{
			comboDefault = 38404;
		}
        while(!special)//start
		{
			while(visible)
			{
				if(AgainstFFCBase(this) && Link->PressA)
				{
					Link->InputA = false;
					Link->PressA = false;
					interact(this, NPCid);
				}
				if(isAfter(endday,endhour,true) || isBefore(startday,starthour,false))
				{
					visible=false;
					this->Data = COMBO_INVIS;
					Screen->ComboD[loc]=comboDefault;
				}
				Waitframe();
			}
			while(!visible)
			{
				if(isAfter(startday,starthour,true)&&isBefore(endday,endhour,false))
				{
					visible=true;
					this->Data = NPCcombo;
					Screen->ComboD[loc]=comboUnder;
				}
				Waitframe();
			}
        }//end
		while(special)//start
		{
			switch(NPCid)
			{
				case 1:
				{
					while(true)
					{
						while(HMS_visible==false)
						{
							Waitframe();
						}
						visible=true;
						this->Data = NPCcombo;
						Screen->ComboD[loc]=comboUnder;
						while(visible)
						{
							if(AgainstFFCBase(this) && Link->PressA)
							{
								Link->InputA = false;
								Link->PressA = false;
								interact(this, NPCid);
							}
							Waitframe();
						}
					}
				}
				case 2:
				case 5:
				case 6:
				{
					this->Data=NPCcombo;
					while(true)
					{
						if(AgainstFFCBase(this) && Link->PressA)
						{
							Link->InputA = false;
							Link->PressA = false;
							interact(this, NPCid);
						}
						Waitframe();
					}
				}
				case 7:
				case 8:
				case 9:
				case 10:
				{
					int xoff = Cond(NPCid>8,8,0);
					int yoff = Cond(NPCid>8,0,-8);
					int lastform = form;
					this->Data = NPCcombo;
					if(getGlobalVar(GVAR_GUARDSMOVED,GV_MISCRESETTABLE) && form != 1)
					{
						this->X += xoff;
						this->Y += yoff;
					}
					else
					{
						if(NPCid<9)
						{
							Screen->ComboD[loc+32] = 38410;
						}
						else
						{
							Screen->ComboD[loc+16] = 38410;
						}
					}
					if(NPCid<9)
					{
						Screen->ComboD[loc+16] = 38410;
					}
					else
					{
						Screen->ComboD[loc+17] = 38410;
					}
					while(true)
					{
						if(lastform == 1 && form != 1 && getGlobalVar(GVAR_GUARDSMOVED,GV_MISCRESETTABLE))
						{
							this->X += xoff;
							this->Y += yoff;
							if(NPCid<9)
							{
								Screen->ComboD[loc+32] = 38406;
							}
							else
							{
								Screen->ComboD[loc+16] = 38406;
							}
						}
						else if(lastform != 1 && form == 1 && getGlobalVar(GVAR_GUARDSMOVED,GV_MISCRESETTABLE))
						{
							this->X -= xoff;
							this->Y -= yoff;
							switch(NPCid)
							{
								case 7:
									Screen->ComboD[loc+32] = 38410;
									if(Link->X>=this->X-16)Link->X=this->X-16;
									break;
								case 8:
									Screen->ComboD[loc+32] = 38410;
									if(Link->X<this->X+16)Link->X=this->X+16;
									break;
								case 9:
									Screen->ComboD[loc+16] = 38410;
									if(Link->Y<this->Y+24)Link->Y=this->Y+24;
									break;
								case 10:
									Screen->ComboD[loc+16] = 38410;
									if(Link->Y>this->Y)Link->Y=this->Y;
									break;
							}
						}
						if(AgainstFFCBase(this) && Link->PressA)
						{
							Link->InputA = false;
							Link->PressA = false;
							if(form != 1 && !getGlobalVar(GVAR_GUARDSMOVED,GV_MISCRESETTABLE))
							{
								interact(this, NPCid, 0, {1});
								this->X += Cond(NPCid>8,8,0);
								this->Y += Cond(NPCid>8,0,-8);
								if(NPCid<9)
								{
									Screen->ComboD[loc+32] = 38406;
								}
								else
								{
									Screen->ComboD[loc+16] = 38406;
								}
							}
							interact(this, NPCid, 0, {0});
						}
						lastform = form;
						Waitframe();
					}
				}
				case 11:
				{
					while(true)
					{
						if(hour>22||hour<6)
						{
							ShowStringAndWait("OK, it's closing time.@char(26)See ya!");
							Link->PitWarp(1,0x7C);
							Link->X = 160;
							Link->Y = 96;
						}
						if(AgainstFFCBase(this) && Link->PressA)
						{
							interact(this, NPCid);
						}
						Waitframe();
					}
				}
			}
			Waitframe();
		}//end
	}//end NPC setup
	
	void interact(ffc person, int NPCid)//start interact
	{
		interact(person,NPCid,0);
	}
	
	void interact(ffc person, int NPCid,int NPCsound)
	{
		interact(person,NPCid,0,-1);
	}

	void interact(ffc person, int NPCid,int NPCsound,int args) //args is int[], misc size
	{
		Game->PlaySound(NPCsound);
		switch(NPCid)
		{
			case 1://Happy Mask Salesman start
			{
				if(!CS1_seen)
				{
					ShowNPCMessageAndWait(6,NPCid);
					CS1_seen=true;
				}
				else
				{
					ShowNPCMessageAndWait(27,NPCid);
				}
				break;
			}
			//end
			case 2://Banker start
			{
				if(fullCounter(CR_BANKBAL))
				{
					tangoTempI=0;
					ShowNPCStringAndWait("What's this? You need somethin'?@pressa()@26<<@choice(1)Deposit@choice(2)Withdraw>>@domenu(1)@set(@ttempi @chosen)@close()",NPCid);
					if(tangoTempI==1)
					{
						if(bankDeposit())
						{
							bankGiveRewards();
						}
					} else if(tangoTempI==2)
					{
						bankWithdraw();
					}
				}
				else
				{
					tangoTemp=false;
					ShowNPCStringAndWait("Hey there, little guy!@26Won't you deposit some ((Rupees))?@delay(120)@26Nowadays, even if people have money, they don't deposit anything. Nothing!   Nothing!!!@delay(120)@26So, for a limited time, I'll give you a special gift based on how much you deposit.@delay(120)@26For example, if you deposit ((200 rupees)), you'll get an item that holds a lot of ((rupees)).@delay(120)@26So, what'll it be?@26<<@choice(1)Deposit@choice(2)Don't Deposit>>@domenu()@append(45)",NPCid);
					if(tangoTemp)
					{
						ShowNPCStringAndWait("Alright!@pressa()@26So...",NPCid);
						if(bankDeposit())
						{
							ShowNPCStringAndWait("So, little guy, what's your name?@pressa()@26Hmm...@26{{@savename()}} is it?@pressa()@26Got it... I won't forget your deposits. Let me stamp you with my special ink.@pressa()@26Hey, relax! It doesn't leave any marks, and it's not gonna hurt.@pressa()@26There! Now I'll know you when I see you!",NPCid);
							bankGiveRewards();
						}
					}
					else
					{
						ShowNPCStringAndWait("Don't say that! C'mon... Trust me!@pressa()@26...Well, if you change your mind, come back and make a deposit!",NPCid);
					}
				}
				break;
			}
			//end
			case 3://Bremor, Carpenter (Red Pants) start
			{
				if(isBefore(2,6,false))
				{
					ShowNPCStringAndWait("Tsk! Is Brac working t'night? I wonder if that'll get finished.",NPCid);
				}
				else if (isBefore(3,6,false))
				{
					ShowNPCStringAndWait("Tsk, tsk, Brac...@26I wonder if this'll make it?",NPCid);
				}
				else
				{
					ShowNPCStringAndWait("Tsk! I knew it... It's startin' to feel like this job'll be impossible.",NPCid);
				}
				break;
			}
			//end
			case 4://Brac, Carpenter (Green Pants) start
			{
				if(isBefore(2,6,false))
				{
					ShowNPCStringAndWait("Hey, apprentice! Don't just stand around lookin' at the sky all day!",NPCid);
				}
				else if (isBefore(3,6,false))
				{
					ShowNPCStringAndWait("Bremor! Don't be standin' 'round lookin' at yer feet all day!",NPCid);
				}
				else
				{
					ShowNPCStringAndWait("I'm sorry, Bremor, but I'm going, too!",NPCid);
				}
				break;
			}
			//end
			case 5://Name-Changing Tablet start
			{
				tangoTemp=false;
				ShowStringAndWait("{{@savename()}}, would you like to change your name?@26<<@choice(1)Yes@choice(2)No>>@domenu()@append(45)");
				if(!tangoTemp)return;
				Screen_Freeze(1);
				Waitframes(6);
				RunFFCScript(FFC_CHANGENAME,{0});
				break;
			}
			//end
			case 6://Difficulty-Changing Tablet start
			{
				if(!Link->Item[I_OCARINA])
				{
					ShowNPCStringAndWait("Huh, this tablet seems like it's magical, but it isn't working now.",6);
				}
				else
				{
					remchr(shopString,0);
					switch(getGlobalVar(GVAR_DIFFICULTY,GV_MISC))
					{
						case 0:
						{
							strcpy(shopString,"Easy");
							break;
						}
						
						case 1:
						{
							strcpy(shopString,"Normal");
							break;
						}
						
						case 2:
						{
							strcpy(shopString,"Hard");
							break;
						}
					}
					tangoTempI = 1;
					ShowStringAndWait("Select a difficulty. You are presently on @string(@shopstr). Changing this will cause time to reset. @26<<@choice(1)EASY@choice(2)NORMAL@26@choice(3)HARD>>@domenu()@set(@ttempi @chosen)@close()",true);
					tangoTempI--;
					if(tangoTempI!=getGlobalVar(GVAR_DIFFICULTY,GV_MISC))
					{
						updateDifficulty(tangoTempI);
						saveTheGame();
						Link->Warp(0,0x10);
						resetTime();
					}
				}
				break;
			}
			//end
			case 7:  //Guard East
			case 8:  //Guard West
			case 9:  //Guard North 
			case 10: //Guard South start
			{
				if(args[0])
				{
					setGlobalVar(GVAR_GUARDSMOVED,GV_MISCRESETTABLE,1);
					switch(NPCid)
					{
						case 7:
						{
							ShowNPCStringAndWait("Stop right there! Have you some errand in the ((canyon))?@pressa()@26{{}}It is dangerous outside the town walls, so I cannot allow a child like you to...@pressa()@26@26...A ((sword))?@26@pressa()@26My apologies, sir. It was wrong of me to treat you like a child.",NPCid);
							return;
						}
						case 8:
						{
							ShowNPCStringAndWait("Stop right there! Have you some errand in the ((ocean))?@pressa()@26{{}}It is dangerous outside the town walls, so I cannot allow a child like you to...@pressa()@26@26...A ((sword))?@26@pressa()@26My apologies, sir. It was wrong of me to treat you like a child.",NPCid);
							return;
						}
						case 9:
						{
							ShowNPCStringAndWait("Stop right there! Have you some errand in the ((mountains))?@pressa()@26{{}}It is dangerous outside the town walls, so I cannot allow a child like you to...@pressa()@26@26...A ((sword))?@26@pressa()@26My apologies, sir. It was wrong of me to treat you like a child.",NPCid);
							return;
						}
						case 10:
						{
							ShowNPCStringAndWait("Stop right there! Have you some errand in the ((swamp))?@pressa()@26{{}}It is dangerous outside the town walls, so I cannot allow a child like you to...@pressa()@26@26...A ((sword))?@26@pressa()@26My apologies, sir. It was wrong of me to treat you like a child.",NPCid);
							return;
						}
					}
				}
				if(form==1)
				{
					switch(NPCid)
					{
						case 7:
						{
							ShowNPCStringAndWait("Wait a moment, Deku Scrub! Have you some errand in the ((canyon))?@pressa()@26{{}}It is dangerous outside the town walls, so I cannot allow a child like you to go out alone.@pressa()@26 Until you are old enough to carry a ((weapon)), you cannot pass through here without being accompanies by an adult.",NPCid);
							return;
						}
						case 8:
						{
							ShowNPCStringAndWait("Wait a moment, Deku Scrub! Have you some errand in the ((ocean))?@pressa()@26{{}}It is dangerous outside the town walls, so I cannot allow a child like you to go out alone.@pressa()@26 Until you are old enough to carry a ((weapon)), you cannot pass through here without being accompanied by an adult.",NPCid);
							return;
						}
						case 9:
						{
							ShowNPCStringAndWait("Wait a moment, Deku Scrub! Have you some errand in the ((mountains))?@pressa()@26{{}}It is dangerous outside the town walls, so I cannot allow a child like you to go out alone.@pressa()@26 Until you are old enough to carry a ((weapon)), you cannot pass through here without being accompanied by an adult.",NPCid);
							return;
						}
						case 10:
						{
							ShowNPCStringAndWait("Stop right there, Deku Scrub! Do you intend to return to the ((swamp)) alone?@pressa()@26{{}}It is dangerous outside the town walls, so I cannot allow a child like you to leave unaccompanied.@pressa()@26 You are not allowed to pass through here without an adult or until you are old enough to carry a ((weapon)).",NPCid);
							return;
						}
					}
				}
				switch(NPCid)
				{
					case 7:
					{
						ShowNPCStringAndWait("The canyon at ((Stone Tower)) lies this way. Be careful.",NPCid);
						return;
					}
					case 8:
					{
						ShowNPCStringAndWait("From ((Great Bay)) you can see clear to the ((ocean)). It lies in this direction. Be careful.",NPCid);
						return;
					}
					case 9:
					{
						ShowNPCStringAndWait("The mountains of ((Snowhead)) lies in this direction. Be careful.",NPCid);
						return;
					}
					case 10:
					{
						ShowNPCStringAndWait("The southern swamp at ((Woodfall)) lies in this direction. Be careful.",NPCid);
						return;
					}
				}
			}
			//end
			case 11://start Town Shooting Gallery Guy
			{
				if(!form)
				{
					if(getNPCflag(11, FLAG2))
					{
						if(day<3)ShowStringAndWait("Wanna try?");
						else ShowStringAndWait("How about it?@char(26)Wanna try?");
					}
					else
					{
						if(day<3)ShowStringAndWait("If you think you can do it, why don'tcha give it a try, sonny?");
						else ShowStringAndWait("If you still have time, why don'tcha try it, sonny?");
						setNPCflag(11, FLAG2);
					}
					ShowStringAndWait("One game is 20 rupees.@char(26)<<@choice(1)OK@choice(2)No thanks>>@domenu()@set(@ttempi @chosen)@close()");
					if(tangoTempI==2)
					{
						if(day<3)ShowStringAndWait("...Well, then, be that way!");
						else ShowStringAndWait("Usually, this place is packed during the festival...@char(26)But not this year.");
						return;
					}
					else
					{
						while(true)
						{
							if(!Link->Item[I_BOWARROW])
							{
								if(day<3)ShowStringAndWait("Huh? You don't have a bow?@char(26)Then I guess you can't play.");
								else ShowStringAndWait("Huh? You don't have a bow?@char(26)Well, that's too bad...");
								return;
							}
							else if(fullCounter(CR_RUPEES)<20)
							{
								if(day<3)ShowStringAndWait("Oy! Oy! You don't have enough Rupees, sonny!");
								else ShowStringAndWait("You don't have enough ((Rupees))?@char(26)... That's too bad.");
								return;
							}
							else
							{
								Game->DCounter[CR_RUPEES] -= 20;
								if(!getNPCflag(11,FLAG1))
								{
									ShowStringAndWait("All right, sonny!@char(26)The rules are simple...");
									ShowStringAndWait("Hit as many ((red ones)) as you can within the time limit.");
									ShowStringAndWait("If you hit a [[blue one]], you lose time, so watch out!");
									ShowStringAndWait("You can use as many arrows as you'd like. Press {{B}} to shoot them.");
									ShowStringAndWait("Score at least 40 points to get a fabulous prize! Good luck!");
									setNPCflag(11,FLAG1);
								}
								else
								{
									ShowStringAndWait("All right, sonny!@char(26)Aim for the ((red ones)).@char(26)Don't mess up and hit one of them [[blue ones]] by mistake!");
									ShowStringAndWait("Good luck!");
								}
								tangoTempI = -1;
								RunFFCScript(FFC_MINIGAME_OCTO,{0});
								while(tangoTempI==-1)Waitframe();
								if(tangoTempI<40)
								{
									if(day<3)ShowStringAndWait("You hit @number(@ttempi), did ya?@char(26)Oh, that's too bad...");
									else ShowStringAndWait("So, you hit @number(@ttempi), did ya?@char(26)Too bad...");
									if(day<3)ShowStringAndWait("So? You can't stop, can ya? You can play as often as you'd like as long as you have enough ((Rupees)).");
									else ShowStringAndWait("Frustrating, ain't it?@char(26)Wanna try again?");
								}
								else if(tangoTempI<50)
								{
									ShowStringAndWait("Well look at that! You hit @number(@ttempi)! Well, here ya go!");
									if(getFlagGlobalVar(GVAR_MGOCTO,GV_MINIGAME,FLAG1))
									{
										item itm = CreateItemAt(I_RUPEE50,Link->X,Link->Y);
										itm->Pickup = IP_HOLDUP;
									}
									else
									{
										item itm = CreateItemAt(I_QUIVER_BIG,Link->X,Link->Y);
										itm->Pickup = IP_HOLDUP;
										flagGlobalVar(GVAR_MGOCTO,GV_MINIGAME,FLAG1);
									}
									if(day==3)ShowStringAndWait("This may be our last day in buisiness, and you shot pretty well...");
									return;
								}
								else
								{
									ShowStringAndWait("Huh? No way!@char(26)That was perfect!");
									ShowStringAndWait("Well, here ya go!");
									if(getFlagGlobalVar(GVAR_MGOCTO,GV_MINIGAME,FLAG2))
									{
										item itm = CreateItemAt(I_RUPEE200,Link->X,Link->Y);
										itm->Pickup = IP_HOLDUP;
									}
									else
									{
										item itm = CreateItemAt(I_HCPIECE,Link->X,Link->Y);
										itm->Pickup = IP_HOLDUP;
										flagGlobalVar(GVAR_MGOCTO,GV_MINIGAME,FLAG2);
									}
									if(day==3)ShowStringAndWait("This may be our last day in buisiness, and you shot pretty well...");
									return;
								}
								ShowStringAndWait("One game is ((20 rupees)).@char(26)<<@choice(1)OK@choice(2)No thanks>>@domenu()@set(@ttempi @chosen)@close()");
								if(tangoTempI==2)
								{
									if(day<3)ShowStringAndWait("...Well, then, be that way!");
									else ShowStringAndWait("Usually, this place is packed during the festival...@char(26)But not this year.");
									return;
								}
							}
						}
					}
				}
				else 
				{
					switch(form)
					{
						case 1:
							if(!getNPCflag(11,FLAG3))
							{
								ShowStringAndWait("Oh! When I saw that fairy, I thought you were that troublemakin' brat with the mask.");
								setNPCflag(11,FLAG3);
							}
							if(Link->Item[I_BOWARROW])ShowStringAndWait("Sorry, but you can't play if you can't shoot a bow.");
							else ShowStringAndWait("Sorry, but you can't play if you don't have a bow.");
							break;
						case 2:
							if(!getNPCflag(11,FLAG4))
							{
								ShowStringAndWait("Well, look at you! You've got quite a build! I betcha can lift anything!");
								ShowStringAndWait("But...");
								setNPCflag(11,FLAG4);
							}
							if(Link->Item[I_BOWARROW])ShowStringAndWait("Sorry...If you can't shoot a bow, you can't play.");
							else ShowStringAndWait("Sorry...If you don't have a bow, you can't play.");
							break;
						case 3:
							if(!getNPCflag(11,FLAG5))
							{
								ShowStringAndWait("I swear I've seen you somewhere before...");
								ShowStringAndWait("Well, let me tell ya");
								setNPCflag(11,FLAG5);
							}
							if(Link->Item[I_BOWARROW])ShowStringAndWait("If you can't shoot a bow, you can't play. Sorry.");
							else ShowStringAndWait("If you don't have a bow, you can't play. Sorry.");
							break;
					}
				}
				break;
			}
			//end
			case -1://  start
			{
				
				break;
			}
			//end
			default:
			{
				TraceS("[NPC][void interact()] NPC id is not assigned! Something is wrong!");TraceNL();
				tangoTempI = NPCid;
				ShowStringAndWait("ERROR: NPC_DIALOGUE NOT FOUND FOR NPC ID @number(@ttempi)");
			}
		}
	}//end interact
	//start bankFuncs
	bool bankDeposit()
	{
		bool notnew = fullCounter(CR_BANKBAL);
		int deposited = 0;
		if(fullCounter(CR_BANKBAL))
		{
			ShowNPCStringAndWait("Excuse me, but let me take a look at you...@delay(120)@26Ah, yes... {{@savename()}}.@26If I remember, you're the little guy who deposited ((@number(@bankbal) rupees)).",2);
		}
		if(!bankMaxDeposit())
		{
			if(fullCounter(CR_RUPEES)<=0)
			{
				ShowNPCStringAndWait("Hmm... You play mean jokes, little guy! You haven't even got a single ((Rupee))!@delay(120)@26Come back and deposit some after you save up a bunch!",2);
				notnew=false;
			}
			else
			{
				ShowNPCStringAndWait("I can only hold 5000 rupees per account.",2);
			}
		}
		else
		{
			deposited = chooseTripleDigitNum(bankMaxDeposit(),SFX_BANKMENU);
			Game->DCounter[CR_RUPEES]-=deposited;
			Game->DCounter[CR_BANKBAL]+=deposited;
		}
		if(notnew)
		{
			ShowNPCStringAndWait("All right, little guy, now I've got a total of ((@number(@bankbal) Rupees)) from you!",2);
			ShowNPCStringAndWait("Come back and deposit some after you save up a bunch!",2);
		}
		return deposited;
	}
	
	bool bankWithdraw()
	{
		ShowNPCStringAndWait("Excuse me, but let me take a look at you...@delay(120)@26Ah, yes... {{@savename()}}.@26If I remember, you're the little guy who deposited ((@number(@bankbal) rupees)).",2);
		if(!bankMaxWithdraw())
		{
			ShowNPCStringAndWait("You can't hold any more rupees, little guy!",2);
			return 0;
		}
		else
		{
			ShowNPCStringAndWait("So...",2);
		}
		int withdrawn = chooseTripleDigitNum(bankMaxWithdraw(),SFX_BANKMENU);
		Game->DCounter[CR_RUPEES]+=withdrawn;
		Game->DCounter[CR_BANKBAL]-=withdrawn;
		if(fullCounter(CR_BANKBAL))ShowNPCStringAndWait("Come back and deposit some after you save up a bunch!",2);
		else ShowNPCStringAndWait("Look, little guy, all the ((Rupees)) you deposited are gone, so you can't use that {{stamp}} anymore.",2);
		return withdrawn;
	}//end bankFuncs
}

int getNPCCombo(int data, int id, int NPCcombo, int startday, int starthour, int endday, int endhour, bool special)
{
	if(NPCcombo == COMBO_INVIS || NPCcombo == 0)
		NPCcombo = data;
	if(!special)
	{
		if(isAfter(startday,starthour,true)&&isBefore(endday,endhour,false)) return NPCcombo;
		return 0;
	}
	switch(id)
	{
		case 1:
		case 2:
		case 5:
		case 6:
		case 7:
		case 8:
		case 9:
		case 10:
		case 11:
			return NPCcombo;
		default:
			return 0;
	}
}

//end NPC
//start FFC Cutscene 
//Key: 1 = One-Time, R = Repeating (resets each cycle)
bool HMS_visible = false;
bool CS1_seen = false;
ffc script cutscene
{
	void run(int cutsceneID, int arg1, int arg2, int arg3, int arg4, int arg5, int arg6, int arg7)
	{
		this->Data = COMBO_INVIS;
		bool waiting = true;
		if(cutsceneID==1)//start Happy Mask Salesman appears behind you! (1)
		{
			if(CS1_seen)
			{
				HMS_visible = true;
				Quit();
			}
			while(!CS1_seen)
			{
				while(waiting)
				{
					if(Link->X>this->X-32&&Link->X<this->X+32&&Link->Y>this->Y-8)
					{
						waiting=false;
					}
					Waitframe();
				}
				if(CS1_seen)
				{
					Quit();
				}
				HMS_visible = true;
				NoAction();
				Waitframe();
				Game->PlaySound(220);
				ShowMessageAndWait(5);
				Link->Y=this->Y-16;
				waiting=true;
			}
			//end 1
		}
		else if(cutsceneID==2)//start Opening the Festival Door (R)
		{
			while(waiting)
			{
				if(day==3&&!hour&&!time)
				{
					//Play SFX for festival door opening //UNFINISHED//
				}
				if(isAfter(3,24,true))
				{
					Waitframe();
					Screen->ComboD[ComboAt(this->X+15,this->Y+15)]+=2;
					Screen->ComboD[ComboAt(this->X,this->Y+15)]+=2;
					Screen->ComboD[ComboAt(this->X+15,this->Y)]+=2;
					Screen->ComboD[ComboAt(this->X,this->Y)]+=2;
					waiting=false;
				}
				Waitframe();
			}
			//end 2
		}
		else if(cutsceneID==3)//start SCT Tower building & chest (R)
		{
			int combos[] = {ComboAt(this->X,this->Y),ComboAt(this->X+16,this->Y),ComboAt(this->X+32,this->Y),ComboAt(this->X,this->Y+16),ComboAt(this->X+16,this->Y+16),ComboAt(this->X+32,this->Y+16)};
			bool waiting2 = true;
			while(waiting)
			{
				Waitframe();
				if(!arg1) // Floor 2
				{
					if(day>=2)
					{
						for(int i=0;i<6;i++)
						{
							Screen->ComboD[combos[i]]=38402;
						}
						if(Link->X>=this->X-8&&Link->X<this->X+48&&Link->Y>=this->Y-8&&Link->Y<this->Y+32)
						{
							Link->X=this->X+16;
							Link->Y=this->Y+32;
						}
						while(true)
						{
							for(int i=0;i<6;i++)
							{
								HeightFastCombo(4,ComboX(combos[i]),ComboY(combos[i]),38400,2,OP_OPAQUE);
							}
							if(day==3)
							{
								HeightFastCombo(4,this->X+16,this->Y,getChestCombo(COMBO_CHEST,1),0,OP_OPAQUE);
							}
							Waitframe();
						}
					}
				}
				else if(arg1==1) // Floor 3
				{
					if(day>=2&&waiting2)
					{
						for(int i=0;i<6;i++)
						{
							//if((i==2 && day == 3 && hour < 18) || (i==3 && day == 2))continue;
							Screen->ComboD[combos[i]]=38404;
							Screen->ComboC[combos[i]]=2;
						}
						waiting2=false;
					}
					if(day==3)
					{
						int args[8] = {39,1};
						ffc f = Screen->LoadFFC(RunFFCScript(FFC_CHEST,args));
						f->X=this->X+16;
						f->Y=this->Y;
						waiting=false;
					}
				}
				else if(arg1==2) // Floor 1
				{
					if(day==2)
					{
						HeightFastCombo(4,this->X,this->Y+16,31761,0,OP_OPAQUE);//Draw Bremor from the third layer
					}
					if(day==3)
					{
						HeightFastCombo(4,this->X+16,this->Y,getChestCombo(COMBO_CHEST,1),0,OP_OPAQUE); //Draw the chest on the third layer
						if(isBefore(3,18,false))HeightFastCombo(4,this->X+32,this->Y,31761,0,OP_OPAQUE);//Draw Bremor from the third layer
					}
				}
			}
			//end
		}
	}
}
//end
//start Signpost
ffc script Signpost
{
    void run(int m,int input,bool largeHitbox,bool anySide)
	{
        int loc = ComboAt(this->X,this->Y);
        while(true){
            while(!AgainstComboBase(loc,largeHitbox,anySide) || !SelectPressInput(input)) Waitframe();
            SetInput(input,false);
            SignShowMessageAndWait(m);
            Waitframe();
        }
    }
    bool AgainstComboBase(int loc, bool largeHitbox, bool anySide)
	{
		if(isFrozen)return false;
		if(largeHitbox && !anySide)
		{
			return Link->Z == 0 && (Link->Dir == DIR_UP && Link->Y == ComboY(loc)+16 && Abs(Link->X-ComboX(loc)) < 8);
		}
		else if (!largeHitbox&&!anySide)
		{
			return Link->Z == 0 && (Link->Dir == DIR_UP && Link->Y == ComboY(loc)+8 && Abs(Link->X-ComboX(loc)) < 8);
		}
		else if (largeHitbox && anySide)
		{
			return Link->Z == 0 && ((Link->Dir == DIR_UP && Link->Y == ComboY(loc)+16 && Abs(Link->X-ComboX(loc)) < 8)||(Link->Dir == DIR_DOWN && Link->Y == ComboY(loc)-16 && Abs(Link->X-ComboX(loc)) < 8)||(Link->Dir == DIR_LEFT && Link->X == ComboX(loc)+16 && Abs(Link->Y-ComboY(loc)) < 8)||(Link->Dir == DIR_RIGHT && Link->X == ComboX(loc)-16 && Abs(Link->Y-ComboY(loc)) < 8));
		}
		else if (!largeHitbox && anySide)
		{
			return Link->Z == 0 && ((Link->Dir == DIR_UP && Link->Y == ComboY(loc)+8 && Abs(Link->X-ComboX(loc)) < 8)||(Link->Dir == DIR_DOWN && Link->Y == ComboY(loc)-16 && Abs(Link->X-ComboX(loc)) < 8)||(Link->Dir == DIR_LEFT && Link->X == ComboX(loc)+16 && Abs(Link->Y-ComboY(loc)) < 8)||(Link->Dir == DIR_RIGHT && Link->X == ComboX(loc)-16 && Abs(Link->Y-ComboY(loc)) < 8));
		}
		else {return false;}
    }
}

//!!These functions should only be included in your script file once!!
bool SelectPressInput(int input)
{
    if(input == 0) return Link->PressA;
    else if(input == 1) return Link->PressB;
    else if(input == 2) return Link->PressL;
    else if(input == 3) return Link->PressR;
}

void SetInput(int input, bool state)
{
    if(input == 0) Link->InputA = state;
    else if(input == 1) Link->InputB = state;
    else if(input == 2) Link->InputL = state;
    else if(input == 3) Link->InputR = state;
}
//end Signpost
//start Shop
ffc script Shop{
	void run(int itemID, int price, int shopSpecial, bool reqBottle){
		if(shopSpecial!=0){
			//handle each shop id seperately, altering "itemID".
		}
		if(!itemID)Quit();
		item thisVisual = CreateItemAt(itemID, this->X, this->Y);
		thisVisual->Pickup=IP_DUMMY;
		this->Data=COMBO_INVIS;
		int loc = ComboAt(this->X,this->Y);
        while(true){
            while(!AgainstComboBase(loc) || !SelectPressInput(0)){ 
				if(!thisVisual->isValid()){
					thisVisual = CreateItemAt(itemID, this->X, this->Y);
					thisVisual->Pickup=IP_DUMMY;
				}
				Waitframe();
			}
            SetInput(0,false);
			//Set shop vars
			tangoTemp=false;
			remchr(shopString,0);
			itemdata i = Game->LoadItemData(itemID);
			i->GetName(shopString);
			shopPrice=price;
			//
			bool hasEmptyBottle = CanFillBottle();
			if((fullCounter(CR_RUPEES))>=price&&(!reqBottle||hasEmptyBottle)){
				ShowMessageAndWait(MSG_SHOPS);
				if(tangoTemp){
					item itm = CreateItemAt(itemID, Link->X, Link->Y);
					itm->Pickup = IP_HOLDUP;
					Game->DCounter[CR_RUPEES] -= price;
					WaitNoAction(10);
				}
			} else if(reqBottle&&!hasEmptyBottle){
				ShowMessageAndWait(30);//No bottle
			} else {
				ShowMessageAndWait(29);//No money
			}
        }
	}
    bool AgainstComboBase(int loc){
		return Link->Z == 0 && (Link->Dir == DIR_UP && (Link->Y >= ComboY(loc)+8&&Link->Y <ComboY(loc)+16) && Abs(Link->X-ComboX(loc)) < 8);
    }
}
//end Shop
//start bank
int bankMaxWithdraw()
{
	int fee = 0;
	if(isBetween(0,6))fee=4;
	return Max(0,Min(Game->MCounter[CR_RUPEES]-(fullCounter(CR_RUPEES)),fullCounter(CR_BANKBAL) - fee));
}

int bankMaxDeposit()
{
	return Min(fullCounter(CR_RUPEES),5000-fullCounter(CR_BANKBAL));
}

void bankGiveRewards()
{
	if(fullCounter(CR_BANKBAL)>=200&&!getGlobalVar(GVAR_BANK_REW1,GV_MISC))
	{
		if(Link->Item[41])
		{
			item i = CreateItemAt(42,Link->X,Link->Y);
			i->Pickup = IP_HOLDUP;
		}
		else
		{
			item i = CreateItemAt(41,Link->X,Link->Y);
			i->Pickup = IP_HOLDUP;
		}
		ShowStringAndWait("Here, you've deposited enough rupees to earn a reward!");
		setGlobalVar(GVAR_BANK_REW1,GV_MISC,1);
	}
	if(fullCounter(CR_BANKBAL)>=1000&&!getGlobalVar(GVAR_BANK_REW2,GV_MISC))
	{
		item i = CreateItemAt(1,Link->X,Link->Y);
		i->Pickup = IP_HOLDUP;
		ShowStringAndWait("Here, you've deposited enough rupees to earn another reward!");
		setGlobalVar(GVAR_BANK_REW2,GV_MISC,1);
	}
	if(fullCounter(CR_BANKBAL)>=5000&&!getGlobalVar(GVAR_BANK_REW3,GV_MISC))
	{
		item i = CreateItemAt(I_HCPIECE,Link->X,Link->Y);
		i->Pickup = IP_HOLDUP;
		ShowStringAndWait("Here, you've deposited enough rupees to earn the final reward!");
		setGlobalVar(GVAR_BANK_REW3,GV_MISC,1);
	}
}

int chooseTripleDigitNum(int max)
{
	return chooseTripleDigitNum(max,0);
}

int chooseTripleDigitNum(int max, int sfx)
{
    DEFINE NUMZERO = 11180;
    DEFINE BORDERTILE = 11201;
    DEFINE CURSORTILE = 11200;
    DEFINE FIRSTX = 104;
    DEFINE FIRSTY = 64;
    bool running = true;
    int nums[3];
    int num = 0;
    int cursor = 2;
    Screen_Freeze(1);
    while(running)
	{
        Screen->FastTile(6,FIRSTX,FIRSTY,BORDERTILE,2,OP_OPAQUE);
        Screen->FastTile(6,FIRSTX+16,FIRSTY,BORDERTILE+1,2,OP_OPAQUE);
        Screen->FastTile(6,FIRSTX+32,FIRSTY,BORDERTILE+2,2,OP_OPAQUE);
        if(gameframe%40<20)Screen->FastTile(6,FIRSTX+(cursor*16),FIRSTY,CURSORTILE,2,OP_OPAQUE);
        Screen->FastTile(6,FIRSTX,FIRSTY,NUMZERO+nums[0],2,OP_OPAQUE);
        Screen->FastTile(6,FIRSTX+16,FIRSTY,NUMZERO+nums[1],2,OP_OPAQUE);
        Screen->FastTile(6,FIRSTX+32,FIRSTY,NUMZERO+nums[2],2,OP_OPAQUE);
        if(Link->PressUp)
		{
            nums[cursor]++;
            if(nums[cursor]>9)nums[cursor]-=10;
			Audio->PlaySound(sfx);
        }
		else if(Link->PressDown)
		{
            nums[cursor]--;
            if(nums[cursor]<0)nums[cursor]+=10;
			Audio->PlaySound(sfx);
        }
        if(Link->PressRight)
		{
            cursor++;
            if(cursor>2)cursor-=3;
			Audio->PlaySound(sfx);
        }
		else if(Link->PressLeft)
		{
            cursor--;
            if(cursor<0)cursor+=3;
			Audio->PlaySound(sfx);
        }
        if(Link->PressA)
		{
            num = (nums[0]*100)+(nums[1]*10)+(nums[2]);
            if(num>max)
			{
                num=max;
				nums[0]=Floor(num/100);
				nums[1]=Floor(num/10)%10;
				nums[2]=num%10;
				Audio->PlaySound(sfx);
            }
			else
			{
                running=false;
            }
        }
        TotalNoAction();
        Waitframe();
    }
    Screen_Freeze(0);
    return num;
}
//end bank
//start Locked Door
ffc script lockedDoor
{
	void run(int id, int undercombo)
	{
		int loc = ComboAt(this->X,this->Y);
		int basecombo = Screen->ComboD[loc];
		switch(id)
		{
			case 0:
			{
				while(true)
				{
					while(hour>=22||hour<6)
					{
						Screen->ComboD[loc] = undercombo;
						if(Link->PressA)
						{
							if(AgainstFFCBase(this))
							{
								Link->PressA=false;Link->InputA=false;
								ShowStringAndWait("Shooting Gallery@char(26)((6 a.m. to 10 p.m.))");
								
							}
						}
						Waitframe();
					}
					Screen->ComboD[loc] = basecombo;
					while(hour<22&&hour>=6)Waitframe();
				}
				break;
			}
			
			case 1:
			{
				break;
			}
			
			default:
			{
				TraceS("ERROR: UNDEFINED LOCKED DOOR");
				ShowStringAndWait("ERROR: UNDEFINED LOCKED DOOR");
				break;
			}
		}
	}
}
//end Locked Door
bool AgainstFFCBase(ffc f)
{
	return !isFrozen && Link->Z == 0 && ((Link->Dir == DIR_UP && Link->Y == f->Y+8+(16*(f->TileHeight-1)) && Abs(Link->X-f->X) < 8)||(Link->Dir == DIR_DOWN && Link->Y == f->Y-16 + (16*(f->TileHeight-1)) && Abs(Link->X-f->X) < 8)||(Link->Dir == DIR_LEFT && Link->X == f->X+(16*f->TileWidth) && Link->Y <= f->Y+8+(16*(f->TileHeight-1)) && Link->Y >= f->Y-8+(16*(f->TileHeight-1)))||(Link->Dir == DIR_RIGHT && Link->X == f->X-16 && Link->Y <= f->Y+8+(16*(f->TileHeight-1)) && Link->Y >= f->Y-8+(16*(f->TileHeight-1))));
}
