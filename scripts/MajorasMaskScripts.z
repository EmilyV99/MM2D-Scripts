////////////////////////////////////////
//                                    //
//   MM2D Script: Main Import File    //
//                                    //
////////////////////////////////////////

#option HEADER_GUARD on
#option SHORT_CIRCUIT on
#option TRUNCATE_DIVISION_BY_LITERAL_BUG off
#option NO_LOGGING off
//#option RELATIONAL_OP_RETURN_DECIMAL on
import "std.zh"
import "scripts/MM2D Scripts/MM2D Constants and Global Vars.z"

//start typedefs
typedef const int GVAR;
typedef const int DEFINE;
typedef const int CONFIG;
typedef untyped u;
//end typedefs
//start bonus imports
import "std_zh/idata.zh"
always using namespace idata;
//end
//start header imports
import "scripts/string.zh"
import "scripts/ffcscript.zh"
import "scripts/LinkMovement.zh"
import "tango.zh"
import "tango/font/GUI.zh"
import "tango/font/MajoraFont.zh"
//import "ghost.zh"
import "scripts/TypeAString.zh"
import "scripts/Tint.zh"
//end
//start MM Imports
import "scripts/MM2D Scripts/MM2D Drawing.z"
import "scripts/MM2D Scripts/MM2D Environment.z"
import "scripts/MM2D Scripts/MM2D Global Scripts.z"
import "scripts/MM2D Scripts/MM2D Height.z"
import "scripts/MM2D Scripts/MM2D Items.z"
import "scripts/MM2D Scripts/MM2D Masks and Forms.z"
import "scripts/MM2D Scripts/MM2D NPC-Cutscene.z"
import "scripts/MM2D Scripts/MM2D Ocarina.z"
import "scripts/MM2D Scripts/MM2D Subscreen.z"
import "scripts/MM2D Scripts/MM2D Tango.z"
import "scripts/MM2D Scripts/MM2D Time.z"
import "scripts/MM2D Scripts/MM2D Minigames.z"
import "scripts/MM2D Scripts/MM2D Misc.z"
import "scripts/MM2D Scripts/MM2D Enemies.z"
//end
//start ghost imports
//import "scripts/ghost/Skulltula.z"
//end

//start AmmoRefiller
ffc script AmmoRefiller
{
	void run(int itemID, int framesToWait, bool spawnMultiple)
	{
		this->Data = COMBO_INVIS;
		for(int i=0;true;i++)
		{
			if(!(i%framesToWait))
			{
				item it = CreateItemAt(itemID,this->X,this->Y);
				if(!spawnMultiple)
				{
					while(it->isValid())Waitframe();
				}
			}
			if(i==framesToWait*10)i=0;
			Waitframe();
		}
	}
}
//end AmmoRefiller
//start sidequests
int hasQuestItem(int itemslot)
{
	if(itemslot==1)
	{
		if(Hero->Item[182])return 5;
		else if(Hero->Item[181])return 4;
		else if(Hero->Item[180])return 3;
		else if(Hero->Item[179])return 2;
		else if(Hero->Item[178])return 1;
		else return 0;
	}
	else if(itemslot==2)
	{
		if(Hero->Item[186])return 1;
		else return 0;
	}
	else if(itemslot==3)
	{
		if(Hero->Item[184])return 3;
		else if(Hero->Item[185])return 2;
		else if(Hero->Item[183])return 1;
		else return 0;
	}
}

int getQuestItem(int itemslot, int num)
{
	if(!num)num = hasQuestItem(itemslot);
	if(!num)return 0;
	if(itemslot==1)
	{
		int qits[] = {178,179,180,181,182};
		return qits[num-1];
	}
	else if(itemslot==2)
	{
		return 186;
	}
	else if(itemslot==3)
	{
		int qits[] = {183,185,184};
		return qits[num-1];
	}
}
//end sidequests
//start NameChange
ffc script renameLink
{
	void run()
	{
		DEFINE CHAR0 = 11260;
		DEFINE BORDERTILE = 11196;
		DEFINE CURSORTILE = 11200;
		DEFINE FIRSTX = 64;
		DEFINE FIRSTY = 64;
		DEFINE CHAR_OFFSET = -32;// The CHAR0 tile points to the "Spacebar" character, which is character 32; thus a character must be offset by -32 to get the correct tile.
		DEFINE Y_OFFSET = -1;
		DEFINE X_OFFSET = 0;
		Screen_Freeze(1);
		startTypingMode(8,true);
		int buf[9];
		int cursor = 0;
		while(true)
		{
			cursor = __getTvar(TVAR_INDEX);
			Screen->FastTile(6,FIRSTX-16,FIRSTY-16,BORDERTILE,2,OP_OPAQUE);
			Screen->FastTile(6,FIRSTX-16,FIRSTY,BORDERTILE+20,2,OP_OPAQUE);
			Screen->FastTile(6,FIRSTX-16,FIRSTY+16,BORDERTILE+40,2,OP_OPAQUE);
			for(int i = FIRSTX; i <= FIRSTX+(16*7); i+=16)
			{
				Screen->FastTile(6,i,FIRSTY-16,BORDERTILE+1,2,OP_OPAQUE);
				Screen->FastTile(6,i,FIRSTY,BORDERTILE+1+20,2,OP_OPAQUE);
				Screen->FastTile(6,i,FIRSTY+16,BORDERTILE+1+40,2,OP_OPAQUE);
			}
			Screen->FastTile(6,FIRSTX+(16*7)+16,FIRSTY-16,BORDERTILE+2,2,OP_OPAQUE);
			Screen->FastTile(6,FIRSTX+(16*7)+16,FIRSTY,BORDERTILE+2+20,2,OP_OPAQUE);
			Screen->FastTile(6,FIRSTX+(16*7)+16,FIRSTY+16,BORDERTILE+2+40,2,OP_OPAQUE);
			if(((gameframe%40)<20) && __getTvar(TVAR_INDEX)<8)Screen->FastTile(6,FIRSTX+(cursor*16),FIRSTY+Y_OFFSET,CURSORTILE,2,OP_OPAQUE);
			remchr(buf,0);
			getType(buf);
			for(int i = 0; i < 8; i++)
			{
				if(buf[i]==0)continue;
				Screen->FastTile(6,FIRSTX+(i*16)+X_OFFSET,FIRSTY+Y_OFFSET,CHAR0+buf[i]+CHAR_OFFSET,2,OP_OPAQUE);
			}
			//32-126 inclusive
			if(typingJustEnded())
			{    
				if(getTypeLength()>1)
				{
					Game->SetSaveName(buf);
					clearTypedInput();
					Screen_Freeze(0);
					Quit();
				}
				else
					startTypingMode(8,true);
			}
			Waitframe();
		}
	}
}
//end NameChange
//start ShowString
ffc script ShowString
{
	void run(int str, int doAfter, bool string)
	{
		if(string)
		{
			ShowStringAndWait(str);
			if(str==gbuf)remchr(gbuf,0);
		}
		else ShowMessageAndWait(str);
		if(!doAfter)Quit();
		switch(doAfter)
		{
			case 1:
				if(tangoTemp)
				{
					saveTheGame();
					Hero->PitWarp(0,0x10);
					Hero->X = 120;
					Hero->Y = 32;
					resetTime();
				}
				break;
			case 2:
				if(tangoTemp)
				{
					if(hour>=6&&hour<18)
					{
						hour=18;
						time=0;
					}
					else if(day<3)
					{
						hour=6;
						time=0;
						day++;
					}
					else if(hour>12)
					{
						hour=0;
						time=0;
					}
				}
				break;
			case 3:
				if(tangoTemp)
					slowTime = !slowTime;
				break;
		}
	}
}
//end ShowString


//Stored in other files:
//my custom settings for tango.zh are located inside tango.zh